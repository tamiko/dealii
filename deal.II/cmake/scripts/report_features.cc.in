// ---------------------------------------------------------------------
// $Id$
//
// Copyright (C) 2010 - 2013 by the deal.II authors
//
// This file is part of the deal.II library.
//
// The deal.II library is free software; you can use it, redistribute
// it, and/or modify it under the terms of the GNU Lesser General
// Public License as published by the Free Software Foundation; either
// version 2.1 of the License, or (at your option) any later version.
// The full text of the license can be found in the file LICENSE at
// the top level of the deal.II distribution.
//
// ---------------------------------------------------------------------

#include <deal.II/base/config.h>

#include <iostream>

#include <boost/version.hpp>

#ifdef DEAL_II_WITH_UMFPACK
extern "C" {
#include <umfpack.h>
}
#endif

#if defined(DEAL_II_WITH_MPI)
#include <mpi.h>
#endif

#ifdef DEAL_II_WITH_TRILINOS
#  include <Trilinos_version.h>
#endif

#ifdef DEAL_II_WITH_MUMPS
#  include <deal.II/base/utilities.h>
#  include <dmumps_c.h>
#endif

#ifdef DEAL_II_WITH_PETSC
#  include <petscversion.h>
#endif

#ifdef DEAL_II_WITH_SLEPC
#  include <slepcversion.h>
#endif

// Output configuration options from config.h.
// The format of each line is
//
// deal-feature: FEATURE=value
//
// no spaces in any token!

int main()
{
  std::cout << "dealii-feature: target="
            << "@CMAKE_SYSTEM_NAME@" << std::endl;
  std::cout << "dealii-feature: compiler="
            << "@CMAKE_CXX_COMPILER_ID@@CMAKE_CXX_COMPILER_VERSION@"
            << std::endl;
  if(${_shared_libs})
    std::cout << "dealii-feature: shared_libs=yes" << std::endl;
  else
    std::cout << "dealii-feature: shared_libs=no" << std::endl;

#ifdef DEAL_II_WITH_ARPACK
  std::cout << "dealii-feature: ARPACK=yes" << std::endl;
#endif

std::cout << "dealii-feature: BOOST="
          << BOOST_VERSION / 100000 << "."
          << BOOST_VERSION / 100 % 1000
          << std::endl;

#ifdef DEAL_II_WITH_FUNCTIONPARSER
  std::cout << "dealii-feature: parser=yes" << std::endl;
#else
  std::cout << "dealii-feature: parser=no" << std::endl;
#endif

#ifdef DEAL_II_WITH_HDF5
   std::cout << "dealii-feature: HDF5=yes" << std::endl;
#endif

#ifdef DEAL_II_WITH_LAPACK
  std::cout << "dealii-feature: BLAS=yes" << std::endl;
  std::cout << "dealii-feature: LAPACK=yes" << std::endl;
#endif

#ifdef DEAL_II_WITH_METIS
  std::cout << "dealii-feature: METIS=yes" << std::endl;
#endif

#if defined(DEAL_II_WITH_MPI)
#  ifdef OMPI_MAJOR_VERSION
  std::cout << "dealii-feature: MPI=OpenMPI-"
	    << OMPI_MAJOR_VERSION << '.'
	    << OMPI_MINOR_VERSION << '.'
	    << OMPI_RELEASE_VERSION << std::endl;
#  else
  std::cout << "dealii-feature: MPI="
	    << MPI_VERSION << '.'
	    << MPI_SUBVERSION << std::endl;
#  endif
#endif

#ifdef DEAL_II_WITH_MUMPS
  std::cout << "dealii-feature: MUMPS=yes" << std::endl;
#endif

#ifdef DEAL_II_WITH_P4EST
  std::cout << "dealii-feature: P4est=yes" << std::endl;
#endif

#ifdef DEAL_II_WITH_PETSC
  std::cout << "dealii-feature: PETSc="
	    << PETSC_VERSION_MAJOR << '.'
	    << PETSC_VERSION_MINOR << '.'
	    << PETSC_VERSION_SUBMINOR << "-p"
	    << PETSC_VERSION_PATCH << std::endl;
#endif

#ifdef DEAL_II_WITH_SLEPC
  std::cout << "dealii-feature: SLEPc="
	    << SLEPC_VERSION_MAJOR << '.'
	    << SLEPC_VERSION_MINOR << '.'
	    << SLEPC_VERSION_SUBMINOR << "-p"
	    << SLEPC_VERSION_PATCH << std::endl;
#endif

#ifdef DEAL_II_WITH_NETCDF
  std::cout << "dealii-feature: NetCDF=yes" << std::endl;
#endif

#ifdef DEAL_II_WITH_TECPLOT
   std::cout << "dealii-feature: Tecplot=yes" << std::endl;
#endif

#ifdef DEAL_II_WITH_THREADS
  std::cout << "dealii-feature: multithreading=yes" << std::endl;
#else
  std::cout << "dealii-feature: multithreading=no" << std::endl;
#endif

#ifdef DEAL_II_WITH_TRILINOS
#  ifdef TRILINOS_VERSION_STRING
  std::cout << "dealii-feature: Trilinos=" << TRILINOS_VERSION_STRING << std::endl;
#  else
  const unsigned int trilinos_subminor = TRILINOS_MAJOR_MINOR_VERSION % 100;
  const unsigned int trilinos_minor = (TRILINOS_MAJOR_MINOR_VERSION/100) % 100;
  std::cout << "dealii-feature: Trilinos="
	    << TRILINOS_MAJOR_VERSION << '.'
	    << trilinos_minor << '.'
	    << trilinos_subminor << std::endl;
#  endif
#endif

#ifdef DEAL_II_WITH_UMFPACK
  std::cout << "dealii-feature: UMFPACK="
	    << UMFPACK_MAIN_VERSION << '.'
	    << UMFPACK_SUB_VERSION << '.'
	    << UMFPACK_SUBSUB_VERSION << std::endl;
#endif

#ifdef DEAL_II_WITH_ZLIB
  std::cout << "dealii-feature: LibZ=yes" << std::endl;
#endif

#ifdef DEAL_II_WITH_64BIT_INDICES
  std::cout << "dealii-feature: 64bit_indices=yes" <<std::endl;
#endif  
}

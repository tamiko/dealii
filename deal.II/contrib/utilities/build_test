#!/usr/bin/make -f

#
# A build_test for deal.II
#
# Usage: Invoke this script either in a source directory or with $SOURCEDIR
#        set
#
# The following environment variables may be set:
#
#   SOURCEDIR     - the source directory to use (if not invoked in a source
#                   directory)
#   CONFIGFILE    - A cmake configuration file for the build test
#   LOGDIR        - directory for the log file
#   LOGFILE       - the logfile to use, defaults to
#                       $LOGDIR/$CONFIGFILE.<unix time>.log
#
#   CMAKE         - the cmake executable to use
#   SVN           - svn info command to use
#   TMPDIR        - defaults to "/tmp"
#   CLEAN_TMPDIR  - defaults to "true"
#   RUN_EXAMPLES  - defaults to "true"
#

#
# Specify default values:
#
SOURCEDIR=$(CURDIR)
LOGDIR=$(PWD)
TMPDIR?=/tmp
CMAKE=cmake
SVN=svn info $(SOURCEDIR)

branch:=$(shell $(SVN) | perl -ne 'print "$$1" if m/svn\.dealii\.org.*\/(.+?)\/deal.II/;')
revision:=$(shell $(SVN) | perl -ne 'print "$$_" if s/Last Changed Rev: //;')

date:= $(shell date +%s)
random:=$(shell echo "$$RANDOM")
testdir:= "$(TMPDIR)"/deal-build-test.$(date)-$(random)
builddir:= $(testdir)/build
installdir:= $(testdir)/install
LOGFILE=$(LOGDIR)/$(firstword $(branch) unknown_branch).$(firstword $(notdir $(CONFIGFILE)) no_configuration).$(date).log
CLEAN_TMPDIR=true
RUN_EXAMPLES=true

PIPEnTRAP:= >>$(LOGFILE) 2>&1 || (if ${CLEAN_TMPDIR}; then rm -rf $(testdir); fi; false)

.PHONY: main
main:
	@if test ! -f $(SOURCEDIR)/CMakeLists.txt; then echo "ERROR: $(SOURCEDIR) doesn't seem to be a top-level source directory"; false; fi
	mkdir -p $(LOGDIR)
	mkdir -p $(builddir)
	mkdir -p $(installdir)
	@echo "AUTOMATED DEAL.II BUILD TEST" | tee $(LOGFILE)
	@echo "BEGIN HEADER `date -u '+%Y-%m-%d %T'`" | tee -a $(LOGFILE)
	@echo "dealii-feature: branch=$(branch)" | tee -a $(LOGFILE)
	@echo "dealii-feature: revision=$(revision)" | tee -a $(LOGFILE)
	@echo "dealii-feature: user=$(USER)" | tee -a $(LOGFILE)
	@echo "dealii-feature: host=`hostname`" | tee -a $(LOGFILE)
	@echo "dealii-feature: configuration=`basename \"$(CONFIGFILE)\"`" | tee -a $(LOGFILE)
	@echo END HEADER `date -u '+%Y-%m-%d %T'`\n | tee -a $(LOGFILE)
	@echo "BEGIN CONFIGURE OUTPUT `date -u '+%Y-%m-%d %T'`" | tee -a $(LOGFILE)
	cd $(builddir) && $(CMAKE) -C "$(CONFIGFILE)" -DCMAKE_INSTALL_PREFIX=$(installdir) $(SOURCEDIR) $(PIPEnTRAP)
	@echo "END CONFIGURE OUTPUT `date -u '+%Y-%m-%d %T'`" | tee -a $(LOGFILE)
	@echo "BEGIN REPORT FEATURES `date -u '+%Y-%m-%d %T'`" | tee -a $(LOGFILE)
	cd $(builddir) && make $(MAKEOPTS) run_report_features $(PIPEnTRAP)
	@echo "END REPORT FEATURES `date -u '+%Y-%m-%d %T'`" | tee -a $(LOGFILE)
	@echo "BEGIN BUILD INSTALL OUTPUT `date -u '+%Y-%m-%d %T'`" | tee -a $(LOGFILE)
	cd $(builddir) && make $(MAKEOPTS) install $(PIPEnTRAP)
	@echo "END BUILD INSTALL OUTPUT `date -u '+%Y-%m-%d %T'`" | tee -a $(LOGFILE)
	@echo "BEGIN BUILD EXAMPLES OUTPUT `date -u '+%Y-%m-%d %T'`" | tee -a $(LOGFILE)
	cd $(installdir)/examples && make -f $(SOURCEDIR)/contrib/utilities/build_test DEAL_II_DIR=$(installdir) build_examples $(PIPEnTRAP)
	@echo "END BUILD EXAMPLES OUTPUT `date -u '+%Y-%m-%d %T'`" | tee -a $(LOGFILE)
	@echo "BEGIN RUN EXAMPLES OUTPUT `date -u '+%Y-%m-%d %T'`" | tee -a $(LOGFILE)
	cd $(installdir)/examples && make -f $(SOURCEDIR)/contrib/utilities/build_test run_examples $(PIPEnTRAP)
	@echo "END RUN EXAMPLES OUTPUT `date -u '+%Y-%m-%d %T'`" | tee -a $(LOGFILE)
	@echo "BUILD TEST SUCCESSFUL `date -u '+%Y-%m-%d %T'`" | tee -a $(LOGFILE)
	if ${CLEAN_TMPDIR}; then rm -rf $(testdir); fi


#
# Recipes used for testing the example steps
#

steps:= $(wildcard step-*)

%/%:
	-cd $(@D) && $(CMAKE) . >/dev/null 2>&1
	cd $(@D) && if [ -f Makefile ]; then make; fi

.PHONY: build_examples
build_examples: $(steps:%=%/%)


# Run a minimalistic set of steps in debug configuration:
runsteps_debug:= step-1 step-2 step-3 step-4 step-5 step-6 step-47

# Run all configuration independent steps in release configuration:
runsteps_release= step-1 step-2 step-3 step-4 step-5 step-6 step-7 step-8 step-9 step-10 step-11 step-12 step-13 step-14 step-16 step-20 step-23 step-25 step-26 step-27 step-28 step-30 step-38 step-39 step-44 step-45 step-47 step-48 step-49
# step-15 step-21 step-24


%/OK_DEBUG:
	cd $(@D) && $(CMAKE) -DCMAKE_BUILD_TYPE=Debug . >/dev/null 2>&1
	cd $(@D) && if $(RUN_EXAMPLES); then make run; fi && touch OK_DEBUG

%/OK_RELEASE:
	cd $(@D) && $(CMAKE) -DCMAKE_BUILD_TYPE=Release . >/dev/null 2>&1
	cd $(@D) && if $(RUN_EXAMPLES); then make run; fi && touch OK_RELEASE

.PHONY: run_examples
run_examples: $(runsteps_debug:%=%/OK_DEBUG) $(runsteps_release:%=%/OK_RELEASE)


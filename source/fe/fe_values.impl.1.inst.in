// ---------------------------------------------------------------------
//
// Copyright (C) 2010 - 2013 by the deal.II authors
//
// This file is part of the deal.II library.
//
// The deal.II library is free software; you can use it, redistribute
// it, and/or modify it under the terms of the GNU Lesser General
// Public License as published by the Free Software Foundation; either
// version 2.1 of the License, or (at your option) any later version.
// The full text of the license can be found in the file LICENSE at
// the top level of the deal.II distribution.
//
// ---------------------------------------------------------------------


for (VEC : REAL_SERIAL_VECTORS; S: REAL_SCALARS)
  {
    template <int dim, int spacedim>
    template <typename CI>
    void
    FEValuesBase<dim,spacedim>::CellIterator<CI>::
    get_interpolated_dof_values (const VEC      &in,
			         Vector<S> &out) const
    \{
      cell->get_interpolated_dof_values (in, out);
    \}
  }
  
for (VEC : COMPLEX_SERIAL_VECTORS)
  {
    template <int dim, int spacedim>
    template <typename CI>
    void
    FEValuesBase<dim,spacedim>::CellIterator<CI>::
    get_interpolated_dof_values (const VEC      &in,
			         Vector<std::complex<double> > &out) const
    \{
      cell->get_interpolated_dof_values (in, out);
    \}
  }  

  
 for (S: SCALARS)
  {
  
  template <int dim, int spacedim>
  template <typename CI>
  void
  FEValuesBase<dim,spacedim>::CellIterator<CI>::
  get_interpolated_dof_values (const IndexSet &in,
                               Vector<S> &out) const
  \{
    Assert (cell->has_children() == false, ExcNotImplemented());

    std::vector<types::global_dof_index> dof_indices (cell->get_fe().dofs_per_cell);
    cell->get_dof_indices (dof_indices);

    for (unsigned int i=0; i<cell->get_fe().dofs_per_cell; ++i)
      out[i] = (in.is_element (dof_indices[i]) ? 1 : 0);
  \}
  } 
